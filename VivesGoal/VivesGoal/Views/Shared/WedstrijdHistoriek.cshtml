@using System.Collections
@using Model
@using VivesGoal.ViewModel
@model IEnumerable<Boeking>

@Scripts.Render("~/bundles/datatables")
@Styles.Render("~/Content/datatables")



<table class="table" id="dataTable">
    <thead>
        <tr>
            <th>
                datum
            </th>
            <th>
                wedstrijd
            </th>
            <th>
                aantal
            </th>
            <td>
                prijs
            </td>
        </tr>
    </thead>
    <tbody>
        @{
            IList<WedstrijdHistoriekViewModel> boekingen = new List<WedstrijdHistoriekViewModel>();



            IEnumerable<Boeking> sorted = Model.OrderBy(w => w.Wedstrijd);
            int i = 0;
            int aantal = 0;
            int vorig = -1;
            double vorigePrijs = 0;
            foreach (var item in sorted)
            {
                WedstrijdHistoriekViewModel wedstrijd = new WedstrijdHistoriekViewModel();
                if (vorig == item.Wedstrijd && vorigePrijs==item.ZitPlaats1.Vak.PrijsVak.prijs)
                {
                    wedstrijd.datum = item.Wedstrijd1.datum.ToString("dd-MM-yyyy");
                    wedstrijd.ploeg = item.Wedstrijd1.Club1.naam + " - " + item.Wedstrijd1.Club.naam;
                    wedstrijd.prijs = Convert.ToDouble(item.ZitPlaats1.Vak.PrijsVak.prijs);
                    boekingen[boekingen.Count - 1] = wedstrijd;


                    aantal++;
                    wedstrijd.aantal = aantal;

                }
                else
                {
                    aantal = 1;
                    wedstrijd.datum = item.Wedstrijd1.datum.ToString("dd-MM-yyyy");
                    wedstrijd.aantal = aantal;
                    wedstrijd.ploeg = item.Wedstrijd1.Club1.naam + " - " + item.Wedstrijd1.Club.naam;
                    wedstrijd.prijs = Convert.ToDouble(item.ZitPlaats1.Vak.PrijsVak.prijs);
                    boekingen.Add(wedstrijd);

                }
                vorig = item.Wedstrijd;
                vorigePrijs = Convert.ToDouble(item.ZitPlaats1.Vak.PrijsVak.prijs);
                i++;
            }

            IOrderedEnumerable<WedstrijdHistoriekViewModel> orderedByDate = boekingen.OrderBy(d => d.datum);
        }



        @foreach (WedstrijdHistoriekViewModel item in orderedByDate)
        {
            <tr class="wedstrijdrow">

                <td>
                    @Html.DisplayFor(modelItem => item.datum)
                  
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ploeg)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.aantal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.prijs)
                </td>

            </tr>

        }
    </tbody>



</table>
